[{"D:\\Billing Software\\billing-software\\src\\index.js":"1","D:\\Billing Software\\billing-software\\src\\App.js":"2","D:\\Billing Software\\billing-software\\src\\reportWebVitals.js":"3","D:\\Billing Software\\billing-software\\src\\Billing.js":"4","D:\\Billing Software\\billing-software\\src\\About.js":"5","D:\\Billing Software\\billing-software\\src\\Login.js":"6","D:\\Billing Software\\billing-software\\src\\materialuicardsgrid.js":"7","D:\\Billing Software\\billing-software\\src\\CreateAccount.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":767,"mtime":1610959408545,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1620,"mtime":1610652629502,"results":"13","hashOfConfig":"10"},{"size":764,"mtime":1610647316232,"results":"14","hashOfConfig":"10"},{"size":791,"mtime":1611145330180,"results":"15","hashOfConfig":"10"},{"size":973,"mtime":1610650876756,"results":"16","hashOfConfig":"10"},{"size":6378,"mtime":1611135271329,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1wp6516",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"D:\\Billing Software\\billing-software\\src\\index.js",[],["38","39"],"D:\\Billing Software\\billing-software\\src\\App.js",[],"D:\\Billing Software\\billing-software\\src\\reportWebVitals.js",[],"D:\\Billing Software\\billing-software\\src\\Billing.js",[],"D:\\Billing Software\\billing-software\\src\\About.js",[],"D:\\Billing Software\\billing-software\\src\\Login.js",["40"],"D:\\Billing Software\\billing-software\\src\\materialuicardsgrid.js",["41"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n \r\n  paper: {\r\n    height: 300,\r\n    width: 300,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SpacingGrid() {\r\n  const [spacing, setSpacing] = React.useState(2);\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    setSpacing(Number(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={spacing}>\r\n          {[0, 1, 2,3].map((value) => (\r\n            <Grid key={value} item>\r\n              <Paper className={classes.paper} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n     \r\n    </Grid>\r\n  );\r\n}\r\n",["42","43"],"D:\\Billing Software\\billing-software\\src\\CreateAccount.js",["44"],"import React,{ Component } from 'react'\r\nimport { Form,Col,Button } from 'react-bootstrap';\r\nimport './CreateAccount.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nclass CreateAccount extends Component{\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hotelName:\"veeraiahHotel\",\r\n        FirsName:\"veer\",\r\n        password:\"\",\r\n        UserName:\"\",\r\n        Address2:\"kndano\",\r\n        Address1:\"jbjb\",\r\n        Pincode:\"522212\",\r\n        State:\"AP\",\r\n        City:\"Gunur\",\r\n        LastName:\"nan\",\r\n        MoileNumer:\"9494539139\"\r\n      };\r\n      }\r\n      sendRequest=(event) =>{\r\n     fetch(\"http://localhost:3001/api/insert\", { \r\n    method: \"POST\", \r\n    body: JSON.stringify({ \r\n        hotelName:this.state.hotelName,\r\n        FirsName:this.state.FirsName,\r\n        password:this.state.password,\r\n        UserName:this.state.UserName,\r\n        Address2:this.state.Address2,\r\n        Address1:this.state.Address1,\r\n        Pincode:this.state.Pincode,\r\n        State:this.state.State,\r\n        City:this.state.City,\r\n        LastName:this.state.LastName,\r\n        MoileNumer:this.state.MoileNumer\r\n        \r\n    }), \r\n    headers: { \r\n        \"Access-Control-Allow-Origin\": \"*\", \r\n        'Accept': 'application/json',\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    } \r\n}) \r\n.then(response => response.json())\r\n.then((messages) => {console.log(\"messages\");});\r\n\r\n      }\r\n    \r\n      handleWindow=(event)=>{\r\n        console.log(\"reloading\");\r\n        window.location.replace(\"http://localhost:3000/Login\");\r\n      }\r\n      handleMoileNumer=(event) =>{\r\n        this.setState({ MoileNumer:event.target.value })\r\n        console.log(this.state.MoileNumer);\r\n      }\r\n      handleHotelName=(event) =>{\r\n          this.setState({ hotelName:event.target.value })\r\n          console.log(this.state.hotelName);\r\n        }\r\n        handleFirsName=(event) =>{\r\n          this.setState({ FirsName:event.target.value })\r\n          console.log(this.state.FirsName);\r\n        }\r\n        handleLastName=(event) =>{\r\n          this.setState({ LastName:event.target.value })\r\n          console.log(this.state.LastName);\r\n        }\r\n        handleCity=(event) =>{\r\n          this.setState({ City:event.target.value })\r\n          console.log(this.state.City);\r\n        }\r\n        handleState=(event) =>{\r\n          this.setState({ State:event.target.value })\r\n          console.log(this.state.State);\r\n        }\r\n        handlePincode=(event) =>{\r\n          this.setState({ Pincode:event.target.value })\r\n          console.log(this.state.Pincode);\r\n        }\r\n        handleAddress1=(event) =>{\r\n          this.setState({ Address1:event.target.value })\r\n          console.log(this.state.Address1);\r\n        }\r\n        handleAddress2=(event) =>{\r\n          this.setState({ Address2:event.target.value })\r\n          console.log(this.state.Address2);\r\n        }\r\n        handleUserName=(event) =>{\r\n          this.setState({ UserName:event.target.value })\r\n          console.log(this.state.UserName);\r\n        }\r\n        password=(event) =>{\r\n          this.setState({ password:event.target.value })\r\n          console.log(this.state.password);\r\n        }\r\n        \r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            <div className=\"creteaccount_about\">\r\n            <h1>Register Your Hotel Here</h1>\r\n  <p>Some text about who we are and what we do.</p>\r\n  <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n            </div>\r\n        <div className='createaccount_group'>\r\n          <Form>\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridHotelName\">\r\n      <Form.Label>Hotel Name</Form.Label>\r\n      <Form.Control value={this.state.hotelName} onChange={this.handleHotelName} placeholder=\"Enter Your Hotel Name\" />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n      <Form.Label>First Name</Form.Label>\r\n      <Form.Control  value={this.state.FirsName} onChange={ this.handleFirsName} placeholder=\"First name\" />\r\n    </Form.Group>\r\n  </Form.Row>\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridLastName\">\r\n      <Form.Label>Last Name</Form.Label>\r\n      <Form.Control   value={this.state.LastName} onChange={this.handleLastName} placeholder=\"First Name\" />\r\n    </Form.Group>\r\n    <Form.Group as={Col} controlId=\"formGridMobileNumber\">\r\n      <Form.Label>Mobile Number</Form.Label>\r\n      <Form.Control type=\"number\"  value={this.state.MoileNumer} onChange={this.handleMoileNumer} placeholder=\"Mobile Number\" />\r\n    </Form.Group>\r\n  </Form.Row>\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridCity\">\r\n      <Form.Label>City</Form.Label>\r\n      <Form.Control value={this.state.City} onChange={this.handleCity}/>\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridState\">\r\n      <Form.Label>State</Form.Label>\r\n      <Form.Control value={this.state.State} onChange={this.handleState}/>\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridZip\">\r\n      <Form.Label>Zip Code</Form.Label>\r\n      <Form.Control value={this.state.Pincode} onChange={this.handlePincode}/>\r\n    </Form.Group>\r\n  </Form.Row>\r\n  <Form.Row>\r\n  <Form.Group as={Col}  controlId=\"formGridAddress1\">\r\n    <Form.Label>Address 1</Form.Label>\r\n    <Form.Control value={this.state.Address1} placeholder=\"1234 Main St\" onChange={this.handleAddress1}/>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n    <Form.Label>Address 2</Form.Label>\r\n    <Form.Control value={this.state.Address2} placeholder=\"Apartment, studio, or floor\" onChange={this.handleAddress2}/>\r\n  </Form.Group>\r\n\r\n  </Form.Row>\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridHotelName\">\r\n      <Form.Label>User Name</Form.Label>\r\n      <Form.Control value={this.state.UserName} onChange={this.handleUserName} placeholder=\"Enter Your UserName Name\" />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n      <Form.Label>Password</Form.Label>\r\n      <Form.Control value={this.state.password} type=\"password\" onChange={this.password} placeholder=\"First name\" />\r\n    </Form.Group>\r\n  </Form.Row>\r\n  <Button variant=\"primary\" type=\"submit\" onClick={this.sendRequest,this.handleWindow}>\r\n    Submit\r\n  </Button>\r\n  \r\n</Form>\r\n\r\n        </div>\r\n    \r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default CreateAccount\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":8,"column":12,"nodeType":"51","messageId":"52","endLine":8,"endColumn":29},{"ruleId":"49","severity":1,"message":"53","line":24,"column":9,"nodeType":"51","messageId":"52","endLine":24,"endColumn":21},{"ruleId":"45","replacedBy":"54"},{"ruleId":"47","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":174,"column":68,"nodeType":"58","messageId":"59","endLine":174,"endColumn":69},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'LoadCreateAccount' is defined but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.",["60"],["61"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]